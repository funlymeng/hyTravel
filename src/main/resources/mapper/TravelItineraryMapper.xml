<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.hyTravel.mapper.TravelItineraryMapper">
  <resultMap id="BaseResultMap" type="com.hy.hyTravel.entity.TravelItinerary">
    <result column="TRAVEL_ID" jdbcType="VARCHAR" property="travelId" />
    <result column="TRAVEL_NAME" jdbcType="VARCHAR" property="travelName" />
    <result column="TRAVEL_TYPE" jdbcType="VARCHAR" property="travelType" />
    <result column="PEOPLE_NUMBER" jdbcType="INTEGER" property="peopleNumber" />
    <result column="TRAVEL_CAR" jdbcType="VARCHAR" property="travelCar" />
    <result column="AGE_LIMIT" jdbcType="VARCHAR" property="ageLimit" />
    <result column="SEX_LIMIT" jdbcType="VARCHAR" property="sexLimit" />
    <result column="AREA_LIMIT" jdbcType="VARCHAR" property="areaLimit" />
    <result column="DESTINATION" jdbcType="VARCHAR" property="destination" />
    <result column="GATHERING_PLACE" jdbcType="VARCHAR" property="gatheringPlace" />
    <result column="LEAVE_PLACE" jdbcType="VARCHAR" property="leavePlace" />
    <result column="START_TIME" jdbcType="DATE" property="startTime" />
    <result column="TRAVEL_LEADER_M" jdbcType="VARCHAR" property="travelLeaderM" />
    <result column="TRAVEL_LEADER_S" jdbcType="VARCHAR" property="travelLeaderS" />
    <result column="TRAVEL_LEADER_T" jdbcType="VARCHAR" property="travelLeaderT" />
    <result column="TRAVEL_STATUS" jdbcType="VARCHAR" property="travelStatus" />
    <result column="LIKE_COUNT" jdbcType="INTEGER" property="likeCount" />
    <result column="TRAVEL_EXPLAIN" jdbcType="VARCHAR" property="travelExplain" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
    <result column="UPDATED_TIME" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="TRAVEL_INFO" jdbcType="VARCHAR" property="travelInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRAVEL_ID, TRAVEL_NAME, TRAVEL_TYPE, PEOPLE_NUMBER, TRAVEL_CAR, AGE_LIMIT, SEX_LIMIT,
    AREA_LIMIT, DESTINATION, GATHERING_PLACE, LEAVE_PLACE, START_TIME, TRAVEL_LEADER_M,
    TRAVEL_LEADER_S, TRAVEL_LEADER_T, TRAVEL_STATUS, LIKE_COUNT, TRAVEL_EXPLAIN, CREATED_BY,
    CREATED_TIME, UPDATED_BY, UPDATED_TIME, TRAVEL_INFO
  </sql>
  <select id="selectByExample" parameterType="com.hy.hyTravel.mapper.TravelItineraryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TRAVEL_ITINERARY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hy.hyTravel.mapper.TravelItineraryExample">
    delete from TRAVEL_ITINERARY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hy.hyTravel.entity.TravelItinerary">
    insert into TRAVEL_ITINERARY (TRAVEL_ID, TRAVEL_NAME, TRAVEL_TYPE,
      PEOPLE_NUMBER, TRAVEL_CAR, AGE_LIMIT,
      SEX_LIMIT, AREA_LIMIT, DESTINATION,
      GATHERING_PLACE, LEAVE_PLACE, START_TIME,
      TRAVEL_LEADER_M, TRAVEL_LEADER_S, TRAVEL_LEADER_T,
      TRAVEL_STATUS, LIKE_COUNT, TRAVEL_EXPLAIN,
      CREATED_BY, CREATED_TIME, UPDATED_BY,
      UPDATED_TIME, TRAVEL_INFO)
    values (#{travelId,jdbcType=VARCHAR}, #{travelName,jdbcType=VARCHAR}, #{travelType,jdbcType=VARCHAR},
      #{peopleNumber,jdbcType=INTEGER}, #{travelCar,jdbcType=VARCHAR}, #{ageLimit,jdbcType=VARCHAR},
      #{sexLimit,jdbcType=VARCHAR}, #{areaLimit,jdbcType=VARCHAR}, #{destination,jdbcType=VARCHAR},
      #{gatheringPlace,jdbcType=VARCHAR}, #{leavePlace,jdbcType=VARCHAR}, #{startTime,jdbcType=DATE},
      #{travelLeaderM,jdbcType=VARCHAR}, #{travelLeaderS,jdbcType=VARCHAR}, #{travelLeaderT,jdbcType=VARCHAR},
      #{travelStatus,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER}, #{travelExplain,jdbcType=VARCHAR},
      #{createdBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR},
      #{updatedTime,jdbcType=TIMESTAMP}, #{travelInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.hyTravel.entity.TravelItinerary">
    insert into TRAVEL_ITINERARY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="travelId != null">
        TRAVEL_ID,
      </if>
      <if test="travelName != null">
        TRAVEL_NAME,
      </if>
      <if test="travelType != null">
        TRAVEL_TYPE,
      </if>
      <if test="peopleNumber != null">
        PEOPLE_NUMBER,
      </if>
      <if test="travelCar != null">
        TRAVEL_CAR,
      </if>
      <if test="ageLimit != null">
        AGE_LIMIT,
      </if>
      <if test="sexLimit != null">
        SEX_LIMIT,
      </if>
      <if test="areaLimit != null">
        AREA_LIMIT,
      </if>
      <if test="destination != null">
        DESTINATION,
      </if>
      <if test="gatheringPlace != null">
        GATHERING_PLACE,
      </if>
      <if test="leavePlace != null">
        LEAVE_PLACE,
      </if>
      <if test="startTime != null">
        START_TIME,
      </if>
      <if test="travelLeaderM != null">
        TRAVEL_LEADER_M,
      </if>
      <if test="travelLeaderS != null">
        TRAVEL_LEADER_S,
      </if>
      <if test="travelLeaderT != null">
        TRAVEL_LEADER_T,
      </if>
      <if test="travelStatus != null">
        TRAVEL_STATUS,
      </if>
      <if test="likeCount != null">
        LIKE_COUNT,
      </if>
      <if test="travelExplain != null">
        TRAVEL_EXPLAIN,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="updatedBy != null">
        UPDATED_BY,
      </if>
      <if test="updatedTime != null">
        UPDATED_TIME,
      </if>
      <if test="travelInfo != null">
        TRAVEL_INFO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="travelId != null">
        #{travelId,jdbcType=VARCHAR},
      </if>
      <if test="travelName != null">
        #{travelName,jdbcType=VARCHAR},
      </if>
      <if test="travelType != null">
        #{travelType,jdbcType=VARCHAR},
      </if>
      <if test="peopleNumber != null">
        #{peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="travelCar != null">
        #{travelCar,jdbcType=VARCHAR},
      </if>
      <if test="ageLimit != null">
        #{ageLimit,jdbcType=VARCHAR},
      </if>
      <if test="sexLimit != null">
        #{sexLimit,jdbcType=VARCHAR},
      </if>
      <if test="areaLimit != null">
        #{areaLimit,jdbcType=VARCHAR},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="gatheringPlace != null">
        #{gatheringPlace,jdbcType=VARCHAR},
      </if>
      <if test="leavePlace != null">
        #{leavePlace,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="travelLeaderM != null">
        #{travelLeaderM,jdbcType=VARCHAR},
      </if>
      <if test="travelLeaderS != null">
        #{travelLeaderS,jdbcType=VARCHAR},
      </if>
      <if test="travelLeaderT != null">
        #{travelLeaderT,jdbcType=VARCHAR},
      </if>
      <if test="travelStatus != null">
        #{travelStatus,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="travelExplain != null">
        #{travelExplain,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="travelInfo != null">
        #{travelInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hy.hyTravel.mapper.TravelItineraryExample" resultType="java.lang.Long">
    select count(*) from TRAVEL_ITINERARY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TRAVEL_ITINERARY
    <set>
      <if test="record.travelId != null">
        TRAVEL_ID = #{record.travelId,jdbcType=VARCHAR},
      </if>
      <if test="record.travelName != null">
        TRAVEL_NAME = #{record.travelName,jdbcType=VARCHAR},
      </if>
      <if test="record.travelType != null">
        TRAVEL_TYPE = #{record.travelType,jdbcType=VARCHAR},
      </if>
      <if test="record.peopleNumber != null">
        PEOPLE_NUMBER = #{record.peopleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.travelCar != null">
        TRAVEL_CAR = #{record.travelCar,jdbcType=VARCHAR},
      </if>
      <if test="record.ageLimit != null">
        AGE_LIMIT = #{record.ageLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.sexLimit != null">
        SEX_LIMIT = #{record.sexLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.areaLimit != null">
        AREA_LIMIT = #{record.areaLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.destination != null">
        DESTINATION = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.gatheringPlace != null">
        GATHERING_PLACE = #{record.gatheringPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.leavePlace != null">
        LEAVE_PLACE = #{record.leavePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        START_TIME = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.travelLeaderM != null">
        TRAVEL_LEADER_M = #{record.travelLeaderM,jdbcType=VARCHAR},
      </if>
      <if test="record.travelLeaderS != null">
        TRAVEL_LEADER_S = #{record.travelLeaderS,jdbcType=VARCHAR},
      </if>
      <if test="record.travelLeaderT != null">
        TRAVEL_LEADER_T = #{record.travelLeaderT,jdbcType=VARCHAR},
      </if>
      <if test="record.travelStatus != null">
        TRAVEL_STATUS = #{record.travelStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.likeCount != null">
        LIKE_COUNT = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.travelExplain != null">
        TRAVEL_EXPLAIN = #{record.travelExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null">
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.travelInfo != null">
        TRAVEL_INFO = #{record.travelInfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TRAVEL_ITINERARY
    set TRAVEL_ID = #{record.travelId,jdbcType=VARCHAR},
    TRAVEL_NAME = #{record.travelName,jdbcType=VARCHAR},
    TRAVEL_TYPE = #{record.travelType,jdbcType=VARCHAR},
    PEOPLE_NUMBER = #{record.peopleNumber,jdbcType=INTEGER},
    TRAVEL_CAR = #{record.travelCar,jdbcType=VARCHAR},
    AGE_LIMIT = #{record.ageLimit,jdbcType=VARCHAR},
    SEX_LIMIT = #{record.sexLimit,jdbcType=VARCHAR},
    AREA_LIMIT = #{record.areaLimit,jdbcType=VARCHAR},
    DESTINATION = #{record.destination,jdbcType=VARCHAR},
    GATHERING_PLACE = #{record.gatheringPlace,jdbcType=VARCHAR},
    LEAVE_PLACE = #{record.leavePlace,jdbcType=VARCHAR},
    START_TIME = #{record.startTime,jdbcType=DATE},
    TRAVEL_LEADER_M = #{record.travelLeaderM,jdbcType=VARCHAR},
    TRAVEL_LEADER_S = #{record.travelLeaderS,jdbcType=VARCHAR},
    TRAVEL_LEADER_T = #{record.travelLeaderT,jdbcType=VARCHAR},
    TRAVEL_STATUS = #{record.travelStatus,jdbcType=VARCHAR},
    LIKE_COUNT = #{record.likeCount,jdbcType=INTEGER},
    TRAVEL_EXPLAIN = #{record.travelExplain,jdbcType=VARCHAR},
    CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
    CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
    UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
    UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
    TRAVEL_INFO = #{record.travelInfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>